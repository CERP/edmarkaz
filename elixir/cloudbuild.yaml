steps:
- name: 'gcr.io/cloud-builders/curl'
  args:
  - '-X' 
  - 'POST' 
  - '--data-urlencode'
  - 'payload={"channel": "#platform", "username": "deploybot", "text": "Starting build of backend $SHORT_SHA to $BRANCH_NAME...", "icon_emoji": ":construction_worker:"}'
  - "$_SLACK_URL"
- name: 'gcr.io/cloud-builders/docker'
  args: ['pull', 'asia.gcr.io/$PROJECT_ID/platform-backend:$BRANCH_NAME']
- name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '--cache-from'
  - 'asia.gcr.io/$PROJECT_ID/platform-backend:$BRANCH_NAME'
  - '-t'
  - 'asia.gcr.io/$PROJECT_ID/platform-backend:$SHORT_SHA'
  - '-t'
  - 'asia.gcr.io/$PROJECT_ID/platform-backend:$BRANCH_NAME'
  - 'elixir'
  env:
    - 'VERSION=$SHORT_SHA'
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'asia.gcr.io/$PROJECT_ID/platform-backend:$SHORT_SHA']
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'asia.gcr.io/$PROJECT_ID/platform-backend:$BRANCH_NAME']
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['set', 'image', 'deployment/platform-backend-$BRANCH_NAME', 'platform-backend=asia.gcr.io/$PROJECT_ID/platform-backend:$SHORT_SHA']
  env:
    - 'POSTGRES_PASS=$_POSTGRES_PASS'
    - 'CLOUDSDK_COMPUTE_ZONE=asia-southeast1-c'
    - 'CLOUDSDK_CONTAINER_CLUSTER=platform-backend-cluster'
- name: 'gcr.io/cloud-builders/curl'
  args:
  - '-X' 
  - 'POST' 
  - '--data-urlencode'
  - 'payload={"channel": "#platform", "username": "deploybot", "text": "Succesfully deployed version $SHORT_SHA of the platform backend to $BRANCH_NAME", "icon_emoji": ":construction_worker:"}'
  - "$_SLACK_URL"